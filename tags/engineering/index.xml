<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>engineering on Lucas Viana's ruminations</title><link>https://lucas-viana.com/tags/engineering/</link><description>Recent content in engineering on Lucas Viana's ruminations</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 03 Nov 2021 16:36:48 +0100</lastBuildDate><atom:link href="https://lucas-viana.com/tags/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Encodings part 1: Unicode, ASCII, UTF-8 and... Latin-1?</title><link>https://lucas-viana.com/posts/encoding/</link><pubDate>Wed, 03 Nov 2021 16:36:48 +0100</pubDate><guid>https://lucas-viana.com/posts/encoding/</guid><description>An introduction to how computers deal with human characters.</description></item><item><title>Encodings part 2: The down and dirty of UTF-8</title><link>https://lucas-viana.com/posts/encoding-utf-8/</link><pubDate>Wed, 03 Nov 2021 16:36:48 +0100</pubDate><guid>https://lucas-viana.com/posts/encoding-utf-8/</guid><description>What the double UTF is UTF-8? Let&amp;rsquo;s decode this, bit-by-bit.
This is part 2 of a series of posts on Unicode and encodings:
Encodings Part 1: Unicode, ASCII, UTF-8 and&amp;hellip; Latin-1? Encodings Part 2: The down and dirty of UTF-8 Encodings Part 3: The down and dirty of UTF-16 Unicode and UTF-8 In part 1, we dug a little deeper into the reasons to be for Unicode and found out that Unicode is an immense character table containing all the characters in the world.</description></item><item><title>Encodings part 3: The down and dirty of UTF-16</title><link>https://lucas-viana.com/posts/encoding-utf-16/</link><pubDate>Wed, 03 Nov 2021 16:36:48 +0100</pubDate><guid>https://lucas-viana.com/posts/encoding-utf-16/</guid><description>This is part 3 of a series of posts on Unicode and encodings:
Encodings Part 1: Unicode, ASCII, UTF-8 and&amp;hellip; Latin-1? Encodings Part 2: The down and dirty of UTF-8 Encodings Part 3: The down and dirty of UTF-16 A very short background At the end of the &amp;rsquo;80s, there were two competing forces for standardizing character sets: ISO 10646 and Unicode. ISO was idealistic and Unicode was pragmatic. ISO created a character set containing more than 2 billion code points (of course, most were not allocated).</description></item></channel></rss>